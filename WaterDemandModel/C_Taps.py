__author__ = 'JBreman'
__prject__ = 'WaterDemandModel'

import calcAndSampleCumData as CD
import sampleDataBin as SB
import C_ApplianceType as Event
import sampling_db as DB

class Taps(Event.ApplianceType):            # inherits the class Event.
    """
    This class represents the water generated by a tap during one event (i.e. one actor using the tap once)

    It calculates:
        - the flowrate of the tap: By sampling a input distribution
        - the volume of an event: flowrate * duration (determined by the actor class)
    """

     # Objects used/manipulated by class
    __start_time = 0                                # start time of the event. Passed from the actor
    __flowrate = 0                                  # flowrate of tap during an event
    __duration = 0                                  # length of time that one tap event goes for. Passed from actor
    __volume = 0                                    # volume of water generated by one tap event

    def __init__(self,start_time,duration,unit_type):

        Event.ApplianceType.__init__(self,"tap")           # tap = source

        self.__flowrate = 0
        self.__volume = 0

        # Attach the start time and duration to a object:
        self.__start_time = start_time
        self.__duration = duration
        self.__unit_type = unit_type

         #Call class methods needed to get the shower volume:
        self.calcTapFlowRate()
        self.calcVolume()
        self.getStartTime()
        self.getVolume()

    def calcTapFlowRate(self):
        """
        Calculates the flow rate of a tap. Requires an input file with a probability distribution for different flowrates.
        """
        self.__flowrate = CD.getSampledCumValue(DB.SamplingDatabase.Instance().getDB("TAP_FLOWRATE_DATABASE"))

        if type(self.__flowrate) == str:                    # if selected flow rate isn't a number i.e. is in 0.2-0.4 L/min format, than sample from this bin:
            self.__flowrate = SB.sampleDataBin(self.__flowrate)     # returns a flow rate between 0.2-0.4 e.g. 0.35

    def calcVolume(self):
        """
        :return: The volume of water used be the tap during one event
        """
        self.__volume = self.__flowrate * self.__duration

    def getVolume(self):

        return self.__volume

    def getStartTime(self):

        return self.__start_time

    def getUnitType(self):

        return self.__unit_type


if __name__ == "__main__":

    output = Taps(3,0.17)



